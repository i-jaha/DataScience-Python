# -*- coding: utf-8 -*-
"""DS_Lesson1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uaiLqY7hUGzVyXUOQBV5nU6kiWA5bq1E

## Case Study
"""

"""
Create a function called "addition_2number"
that takes two input numbers from user
and returns sum and count of them.
"""
def addition_2number():
  num1 = float(input("Enter the first number: "))
  num2 = float(input("Enter the second number: "))
  return num1 + num2, 2

total, count = addition_2number()
print(f'sum: {total} , count: {count}')

"""
Create a function called "addition"
that can add two or more numbers
till user enters zero
and returns answer and count of input numbers in a list.
"""
def addition():
    total = 0
    count = 0
    num = float(input("Enter a number (enter 0 to stop): "))
    while num != 0:
        total += num
        count += 1
        num = float(input("Enter a number (enter 0 to stop): "))
    return [total, count]


result = addition()
print(f"Sum: {result[0]}, Count: {result[1]}")

"""
Create a function called "subtraction"
that can subtract two or more numbers
till user enters zero
and returns answer and countof input numbers in a list.
"""
def subtraction():
    total = 0
    count = 0
    num = float(input("Enter a number (enter 0 to stop): "))
    if count == 0:
      total = num
      count += 1
    while num != 0:
        num = float(input("Enter a number (enter 0 to stop): "))
        if num == 0:
          break
        total -= num
        count += 1
    return [total, count]


result = subtraction()
print(f"Difference: {result[0]}, Count: {result[1]}")

"""
Create a function called "multiplication"
that can multiply two or more numbers
till user enters zero
and returns answer and count of input numbers in a list.
"""
def multiplication():
    total = 1
    count = 0
    num = float(input("Enter a number (enter 0 to stop): "))
    if num == 0:
      return [0,0]
    while num != 0:
        total *= num
        count += 1
        num = float(input("Enter a number (enter 0 to stop): "))
    return [total, count]

result = multiplication()
print(f"Product: {result[0]}, Count: {result[1]}")

"""
Create a function called “average”
that returns mean of “addition” function.
"""
def average(func):
  result = func()
  if result[1] == 0:
    return 0
  else:
    return result[0] / result[1]
avg = average(addition)
print(f"Average: {avg}")

"""
Create a simple calculator
that asks user to perform operations among created functions.
"""
def calculator():
    while True:
      print("1: Addition, 2: Subtraction, 3: Multiplication, 0: Exit")
      choice = int(input('Enter a number '))

      if choice == 0:
          print("Exiting calculator")
          break
      if choice == 1:
          result = addition()
          print(f"Sum: {result[0]}, Count: {result[1]}")
      elif choice == 2:
          result = subtraction()
          print(f"Difference: {result[0]}, Count: {result[1]}")
      elif choice == 3:
          result = multiplication()
          print(f"Product: {result[0]}, Count: {result[1]}")
      else:
          print("Invalid input")

calculator()

"""
Write a Python program
to find intersection of two given arrays
using lambda.
"""
list1 = [1,2,3,4,5]
list2 = [4,5,6,7,8]

intersection = list(filter(lambda x: x in list2, list1))

print(intersection)

"""
Write a Python program
to add two given lists
using map and lambda.
"""
def add_lists(list1, list2):
  if len(list1) != len(list2):
    return []
  return list(map(lambda x, y: x + y, list1, list2))

list1 = [1, 2, 3]
list2 = [4, 5, 6]

result_list = add_lists(list1, list2)

print(result_list)

"""
Write a Python program
that stores numbers in a list
which are divisible by nineteen or thirteen from a given list.
"""
def find_divisible_numbers(numbers):
  divisible_numbers = []
  for num in numbers:
      if num % 19 == 0 or num % 13 == 0:
          divisible_numbers.append(num)
  return divisible_numbers

numbers = [13, 19, 26, 38, 57, 76, 95]
result_list = find_divisible_numbers(numbers)
print(result_list)

"""## Home Task"""

"""
Create variable age equal to 32 and check its type.
"""
age = 32
type(age)

"""
Create variable height equal to 1.85
and check its type.
"""
height = 1.85
type(height)

"""
Create variables name and surname.
Define them as 'your_name' and 'your_surname'.
"""
name = "your_name"
surname = "your_surname"

"""
Sum up name and surname variables.
Define as ID.
"""
ID = name + surname

"""
Use indexing.
Find last letter of 'your_name'.
"""
last_letter = name[-1]

"""
Use slicing.
Find 2nd and 3rd letters of 'your_surname'.
"""
second_third_letters = surname[1:3]

"""
Create list as new_list.
Include 3 4 5 6 7 integers.
"""
new_list = [3, 4, 5, 6, 7]

"""
Remove 5 from new_list.
"""
new_list.remove(5)

"""
Delete 2nd value of new_list.
"""
del new_list[1]

"""
Create tuple as new_tuple.
Include 3 4 5 6 7 integers.
"""
new_tuple = (3, 4, 5, 6, 7)

"""
Change 4 in new_tuple to 8.
"""
# Tuples are immutable.
# I need to create a new tuple.

new_tuple = (3, 8, 5, 6, 7)

"""
Find the difference between age and 25,
if the number is greater than 17
return the square of the difference.
"""
def age_difference():
  age = int(input("Enter your age: "))
  diff = age - 25
  if age > 17:
    print("Your age is greater than 17")
    return diff**2
  else:
    print("Your age is less than 17")
    return diff

print(age_difference())